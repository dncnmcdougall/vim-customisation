!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/ccac4dff/
g:lightline#colorscheme#duncan#palette	./lightline/colorscheme/duncan.vim	/^let g:lightline#colorscheme#duncan#palette = lightline#colorscheme#fill(s:p)$/;"	v
project#AddProjectInfo	./project.vim	/^function! project#AddProjectInfo(type, info)$/;"	f
project#AddProjectInfo	project.vim	/^function! project#AddProjectInfo(type, info)$/;"	f
project#CreateAgGFromExtensions	./project.vim	/^function! project#CreateAgGFromExtensions(extensions)$/;"	f
project#CreateAgGFromExtensions	project.vim	/^function! project#CreateAgGFromExtensions(extensions)$/;"	f
project#CreateFindFromExtensions	./project.vim	/^function! project#CreateFindFromExtensions(extensions)$/;"	f
project#CreateFindFromExtensions	project.vim	/^function! project#CreateFindFromExtensions(extensions)$/;"	f
project#CreateGrepFromExtensions	./project.vim	/^function! project#CreateGrepFromExtensions(extensions)$/;"	f
project#CreateGrepFromExtensions	project.vim	/^function! project#CreateGrepFromExtensions(extensions)$/;"	f
project#CreateSearchInFileCommand	./project.vim	/^function! project#CreateSearchInFileCommand(proj_root, proj_type, symbol)$/;"	f
project#CreateSearchInFileCommand	project.vim	/^function! project#CreateSearchInFileCommand(proj_root, proj_type, symbol)$/;"	f
project#IsBelowRoot	./project.vim	/^function! project#IsBelowRoot(file_path)$/;"	f
project#IsBelowRoot	project.vim	/^function! project#IsBelowRoot(file_path)$/;"	f
project#ProjectCTagsExtraArgs	./project.vim	/^function! project#ProjectCTagsExtraArgs(proj_root, proj_type)$/;"	f
project#ProjectCTagsExtraArgs	project.vim	/^function! project#ProjectCTagsExtraArgs(proj_root, proj_type)$/;"	f
project#ProjectFilesCommand	./project.vim	/^function! project#ProjectFilesCommand(proj_root, proj_type)$/;"	f
project#ProjectFilesCommand	project.vim	/^function! project#ProjectFilesCommand(proj_root, proj_type)$/;"	f
project#ProjectInfo	./project.vim	/^function! project#ProjectInfo(proj_root, proj_type)$/;"	f
project#ProjectInfo	project.vim	/^function! project#ProjectInfo(proj_root, proj_type)$/;"	f
project#ProjectRoot	./project.vim	/^function! project#ProjectRoot(file_path)$/;"	f
project#ProjectRoot	project.vim	/^function! project#ProjectRoot(file_path)$/;"	f
project#ProjectType	./project.vim	/^function! project#ProjectType(proj_root)$/;"	f
project#ProjectType	project.vim	/^function! project#ProjectType(proj_root)$/;"	f
project#RelativeToRoot	./project.vim	/^function! project#RelativeToRoot(file_path)$/;"	f
project#RelativeToRoot	project.vim	/^function! project#RelativeToRoot(file_path)$/;"	f
s:evaluateMarker	./project.vim	/^function! s:evaluateMarker(root, marker)$/;"	f
s:evaluateMarker	project.vim	/^function! s:evaluateMarker(root, marker)$/;"	f
s:isBelow	./project.vim	/^function! s:isBelow(root, file_path)$/;"	f
s:isBelow	project.vim	/^function! s:isBelow(root, file_path)$/;"	f
s:p	./lightline/colorscheme/duncan.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.inactive.left = [ ['white', 'gray2'], ['white', 'gray4'] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.inactive.middle =[ [ 'gray2', 'gray7' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.inactive.right = [ ['gray10', 'gray2'], ['gray9', 'gray4'] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.normal.middle =[ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.terminal = copy( s:p.insert )$/;"	v
s:p	./lightline/colorscheme/duncan.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:projectInfo	./project.vim	/^let s:projectInfo = {}$/;"	v
s:projectInfo	project.vim	/^let s:projectInfo = {}$/;"	v
s:rootHasFile	./project.vim	/^function! s:rootHasFile(root, file) abort$/;"	f
s:rootHasFile	project.vim	/^function! s:rootHasFile(root, file) abort$/;"	f
