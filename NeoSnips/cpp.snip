# for
snippet for_int
alias for
abbr for ( int i )
options head
    for ( int ${1:i} = 0; $1 <  ${2}; ++$1 )
    {
        ${0}
    }

# for each
snippet for_each
abbr for ( i : thing )
options head
    for ( ${1:auto} ${2:var} : ${3:collection} )
    {
        ${0}
    }

# Code Review Comment
snippet CRCdmd
alias CRC //CRC //CRCdmd
options head
    // CRC: dmd: ${0}
# TODO
snippet TODOdmd
alias TODO
options head
    // TODO: dmd: ${0}
# Do nothing
snippet DoNothing
alias Do
options head
    // Do nothing

# Debug
snippet DBGdmd
alias DBG
options head
    qDebug()<<"DBG: dmd: ${0}";

snippet toString
options head
    QString ${2:`expand("%:t:r")`}::toString() const ${0}
    {
         return "$2";
    }

snippet class
options head
    #pragma once
    
    class ${1:`toupper(expand("%:h:h:t"))`_EXPORT} ${2:`expand("%:t:r")`}
    {
    public: 
        $2(${3});
        virtual ~$2();

    	${0}
    private:
    
    };

snippet test
options head
    #include "unitdoc.h"

    #include "${1:`expand("%:t:r:r")`}.h"

    UD_CLASS($1, "${2}")
    {
        ${0}
    }

    UD_METHOD($1, $1, "${3}")
    {
    }

snippet cpp
options head
    #include "${1:`expand("%:t:r")`}.h"

    ${2:// ----- STATICS -----}

    // ----- CONSTRUCTOR & DESTRUCTOR -----
    $1::$1(${3})
    {
    }

    $1::~$1(${4})
    {
    }

    // ----- PUBLIC METHODS -----

    ${0}

    // ----- PROTECTED METHODS -----

    // ----- PRIVATE METHODS -----

snippet method
options head
    ${1:void} ${2:`expand("%:t:r")`}::${3}(${0})
    {
    }
